server {
	listen 443 ssl;
	listen [::]:443 ssl;
	server_name vgroux.42.fr;

	ssl_certificate /etc/ssl/certs/vgroux.crt;
	ssl_certificate_key /etc/ssl/private/vgroux.key;

	ssl_protocols TLSV1.2 TLSv1.3;

	root /var/www/html;
	index index.html;

	location /auth/ {
		proxy_pass              http://backend:8000;
		proxy_set_header        Host $host;
		proxy_http_version      1.1;
		proxy_set_header        Connection "upgrade";
		proxy_set_header        X-Real-IP $remote_addr;
		proxy_set_header        X-Forwarded-For $proxy_add_x_forwarded_for;
		proxy_set_header        X-Forwarded-Proto $scheme;
		proxy_set_header        Origin $http_origin;
		proxy_cache_bypass      $http_upgrade;

		add_header 'Access-Control-Allow-Origin' '*' always;
		add_header 'Access-Control-Allow-Credentials' 'true' always;
		add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS' always;
		add_header 'Access-Control-Allow-Headers' 'Origin, X-Requested-With, Content-Type, Accept, Authorization' always;
	}

	location /api/ {
		proxy_pass              http://backend:8000;
		proxy_set_header        Host $host;
		proxy_http_version      1.1;
		proxy_set_header        Connection "upgrade";
		proxy_set_header        X-Real-IP $remote_addr;
		proxy_set_header        X-Forwarded-For $proxy_add_x_forwarded_for;
		proxy_set_header        X-Forwarded-Proto $scheme;
		proxy_set_header        Origin $http_origin;
		proxy_cache_bypass      $http_upgrade;

		add_header 'Access-Control-Allow-Origin' '*' always;
		add_header 'Access-Control-Allow-Credentials' 'true' always;
		add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS' always;
		add_header 'Access-Control-Allow-Headers' 'Origin, X-Requested-With, Content-Type, Accept, Authorization' always;
	}

	location /game/ {
		proxy_pass              http://backend:8000;
		proxy_set_header        Host $host;
		proxy_http_version      1.1;
		proxy_set_header        Connection "upgrade";
		proxy_set_header        X-Real-IP $remote_addr;
		proxy_set_header        X-Forwarded-For $proxy_add_x_forwarded_for;
		proxy_set_header        X-Forwarded-Proto $scheme;
		proxy_set_header        Origin $http_origin;
		proxy_cache_bypass      $http_upgrade;

		add_header 'Access-Control-Allow-Origin' '*' always;
		add_header 'Access-Control-Allow-Credentials' 'true' always;
		add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS' always;
		add_header 'Access-Control-Allow-Headers' 'Origin, X-Requested-With, Content-Type, Accept, Authorization' always;
	}

	location /ws/ {
		proxy_pass              http://backend:8000/;
		proxy_set_header        Host $host;
		proxy_http_version      1.1;
		proxy_set_header        Connection "upgrade";
		proxy_set_header Upgrade $http_upgrade;
		proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
		proxy_read_timeout 86400;
	}

	location / {
		try_files $uri $uri/ =404;
		# proxy_pass http://backend:8000;
		# fastcgi_pass backend:8000;
	}

	# location /api {
	# 	proxy_pass http://backend:8000;
    #     proxy_set_header Host $host;
    #     proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    #     proxy_set_header X-Forwarded-Proto $scheme;
    #     proxy_redirect http://backend:8000 http://$host;
	# }	


	location ~ [^/]\\.py(/|$) {
		# include snippets/fastcgi-php.conf;
       	fastcgi_pass backend:8000;
	}
}